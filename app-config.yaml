app:
  title: Scaffolded Backstage App
  baseUrl: http://localhost:3000

organization:
  name: My Company

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true
  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT} 
      user: ${POSTGRES_USER} 
      password: ${POSTGRES_PASSWORD}

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

techdocs:
  builder: 'local' # Alternatives - 'external'
  generator:
    runIn: 'docker' # Alternatives - 'local'
  publisher:
    type: 'local' # Alternatives - 'googleGcs' or 'awsS3'. Read documentation for using alternatives.


catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, Resource, Location]
  locations:
    - type: file
      target: ../../examples/entities.yaml

    - type: file
      target: ../../examples/template/template.yaml
      rules:
        - allow: [Template]

    - type: file
      target: ../../examples/org.yaml
      rules:
        - allow: [User, Group]

    - type: file
      target: ../../minikube/catalog-info.yaml

    - type: url
      target: https://github.com/backstage/software-templates/blob/main/scaffolder-templates/react-ssr-template/template.yaml
      rules:
        - allow: [Template]

auth:
  # see https://backstage.io/docs/auth/ to learn about auth providers
  environment: development
  providers: 
    github:
      development:
        clientId:  ${GITHUB_CLIENT_ID} 
        clientSecret: ${GITHUB_CLIENT_SECRET}

kubernetes:
  serviceLocatorMethod:
    type: multiTenant
  clusterLocatorMethods:
    - type: config
      clusters:
        - url: ${K8S_URL}
          name: "k8s"
          authProvider: serviceAccount
          skipTLSVerify: false
          skipMetricsLookup: true
          serviceAccountToken: ${K8S_ACCOUNT_TOKEN}
          caData: ${K8S_CA_DATA}
