app:
  title: CODE-IDP Hub
  baseUrl: http://localhost:3000

organization:
  name: CODE-IDP

backend:
  baseUrl: http://localhost:7007
  listen:
    port: 7007
  csp:
    connect-src: ["'self'", 'http:', 'https:']
  cors:
    origin: http://localhost:3000
    methods: [GET, HEAD, PATCH, POST, PUT, DELETE]
    credentials: true

  database:
    client: pg
    connection:
      host: ${POSTGRES_HOST}
      port: ${POSTGRES_PORT}
      user: ${POSTGRES_USER}
      password: ${POSTGRES_PASSWORD}
    knexConfig:
      pool:
        min: 15
        max: 30
        acquireTimeoutMillis: 60000
        createTimeoutMillis: 30000
        destroyTimeoutMillis: 5000
        idleTimeoutMillis: 60000
        reapIntervalMillis: 1000
        createRetryIntervalMillis: 200
        propagateCreateError: false

integrations:
  github:
    - host: github.com
      token: ${GITHUB_TOKEN}

  gitlab:
    - host: gitlab.com
      token: ${GITLAB_TOKEN}


techdocs:
  builder: 'external'
  generator:
    runIn: 'local'
  publisher:
    type: 'googleGcs'
    googleGcs:
      bucketName: 'backstage-codeidp-techdocs' 
      projectId: code-idp
      credentials: ${TECHDOCS_GCS_CREDENTIALS}

# scaffolder:

  
catalog:
  import:
    entityFilename: catalog-info.yaml
    pullRequestBranchName: backstage-integration
  rules:
    - allow: [Component, System, API, User, Group, Resource, Location, Domain]
  locations:
    - type: file
      target: ./examples/template/initiate-deployment.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ./examples/template/register-component.yaml
      rules:
        - allow: [Template]
    - type: file
      target: ./examples/template/sample-document.yaml
      rules:
        - allow: [Template]
        

auth:
  environment: development
  providers:
    google:
      development:
        clientId: ${GOOGLE_CLIENT_ID}
        clientSecret: ${GOOGLE_CLIENT_SECRET}

    github:
      development:
        clientId: ${GITHUB_CLIENT_ID}
        clientSecret: ${GITHUB_CLIENT_SECRET}
    